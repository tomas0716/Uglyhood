/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace sg.protocol.msg_web_api
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class MsgAnsGetUserBattlePass : TBase
  {
    private sg.protocol.basic.Error _error;
    private int _i_SeasonId;
    private int _i_IsPaid;
    private int _i_Point;
    private int _i_FreeNowLevel;
    private int _i_FreeRecvLevel;
    private int _i_PaidNowLevel;
    private int _i_PaidRecvLevel;
    private string _s_ProductId;
    private int _i_SeasonStart;
    private int _i_SeasonEnd;

    public sg.protocol.basic.Error Error
    {
      get
      {
        return _error;
      }
      set
      {
        __isset.error = true;
        this._error = value;
      }
    }

    public int I_SeasonId
    {
      get
      {
        return _i_SeasonId;
      }
      set
      {
        __isset.i_SeasonId = true;
        this._i_SeasonId = value;
      }
    }

    public int I_IsPaid
    {
      get
      {
        return _i_IsPaid;
      }
      set
      {
        __isset.i_IsPaid = true;
        this._i_IsPaid = value;
      }
    }

    public int I_Point
    {
      get
      {
        return _i_Point;
      }
      set
      {
        __isset.i_Point = true;
        this._i_Point = value;
      }
    }

    public int I_FreeNowLevel
    {
      get
      {
        return _i_FreeNowLevel;
      }
      set
      {
        __isset.i_FreeNowLevel = true;
        this._i_FreeNowLevel = value;
      }
    }

    public int I_FreeRecvLevel
    {
      get
      {
        return _i_FreeRecvLevel;
      }
      set
      {
        __isset.i_FreeRecvLevel = true;
        this._i_FreeRecvLevel = value;
      }
    }

    public int I_PaidNowLevel
    {
      get
      {
        return _i_PaidNowLevel;
      }
      set
      {
        __isset.i_PaidNowLevel = true;
        this._i_PaidNowLevel = value;
      }
    }

    public int I_PaidRecvLevel
    {
      get
      {
        return _i_PaidRecvLevel;
      }
      set
      {
        __isset.i_PaidRecvLevel = true;
        this._i_PaidRecvLevel = value;
      }
    }

    public string S_ProductId
    {
      get
      {
        return _s_ProductId;
      }
      set
      {
        __isset.s_ProductId = true;
        this._s_ProductId = value;
      }
    }

    public int I_SeasonStart
    {
      get
      {
        return _i_SeasonStart;
      }
      set
      {
        __isset.i_SeasonStart = true;
        this._i_SeasonStart = value;
      }
    }

    public int I_SeasonEnd
    {
      get
      {
        return _i_SeasonEnd;
      }
      set
      {
        __isset.i_SeasonEnd = true;
        this._i_SeasonEnd = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool error;
      public bool i_SeasonId;
      public bool i_IsPaid;
      public bool i_Point;
      public bool i_FreeNowLevel;
      public bool i_FreeRecvLevel;
      public bool i_PaidNowLevel;
      public bool i_PaidRecvLevel;
      public bool s_ProductId;
      public bool i_SeasonStart;
      public bool i_SeasonEnd;
    }

    public MsgAnsGetUserBattlePass() {
      this._i_SeasonId = 0;
      this.__isset.i_SeasonId = true;
      this._i_IsPaid = 0;
      this.__isset.i_IsPaid = true;
      this._i_Point = 0;
      this.__isset.i_Point = true;
      this._i_FreeNowLevel = 0;
      this.__isset.i_FreeNowLevel = true;
      this._i_FreeRecvLevel = 0;
      this.__isset.i_FreeRecvLevel = true;
      this._i_PaidNowLevel = 0;
      this.__isset.i_PaidNowLevel = true;
      this._i_PaidRecvLevel = 0;
      this.__isset.i_PaidRecvLevel = true;
      this._i_SeasonStart = 0;
      this.__isset.i_SeasonStart = true;
      this._i_SeasonEnd = 0;
      this.__isset.i_SeasonEnd = true;
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Struct) {
              Error = new sg.protocol.basic.Error();
              Error.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              I_SeasonId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              I_IsPaid = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              I_Point = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              I_FreeNowLevel = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              I_FreeRecvLevel = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              I_PaidNowLevel = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              I_PaidRecvLevel = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.String) {
              S_ProductId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              I_SeasonStart = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.I32) {
              I_SeasonEnd = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("MsgAnsGetUserBattlePass");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Error != null && __isset.error) {
        field.Name = "error";
        field.Type = TType.Struct;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        Error.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_SeasonId) {
        field.Name = "i_SeasonId";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_SeasonId);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_IsPaid) {
        field.Name = "i_IsPaid";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_IsPaid);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_Point) {
        field.Name = "i_Point";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_Point);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_FreeNowLevel) {
        field.Name = "i_FreeNowLevel";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_FreeNowLevel);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_FreeRecvLevel) {
        field.Name = "i_FreeRecvLevel";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_FreeRecvLevel);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PaidNowLevel) {
        field.Name = "i_PaidNowLevel";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PaidNowLevel);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PaidRecvLevel) {
        field.Name = "i_PaidRecvLevel";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PaidRecvLevel);
        oprot.WriteFieldEnd();
      }
      if (S_ProductId != null && __isset.s_ProductId) {
        field.Name = "s_ProductId";
        field.Type = TType.String;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_ProductId);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_SeasonStart) {
        field.Name = "i_SeasonStart";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_SeasonStart);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_SeasonEnd) {
        field.Name = "i_SeasonEnd";
        field.Type = TType.I32;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_SeasonEnd);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("MsgAnsGetUserBattlePass(");
      sb.Append("Error: ");
      sb.Append(Error== null ? "<null>" : Error.ToString());
      sb.Append(",I_SeasonId: ");
      sb.Append(I_SeasonId);
      sb.Append(",I_IsPaid: ");
      sb.Append(I_IsPaid);
      sb.Append(",I_Point: ");
      sb.Append(I_Point);
      sb.Append(",I_FreeNowLevel: ");
      sb.Append(I_FreeNowLevel);
      sb.Append(",I_FreeRecvLevel: ");
      sb.Append(I_FreeRecvLevel);
      sb.Append(",I_PaidNowLevel: ");
      sb.Append(I_PaidNowLevel);
      sb.Append(",I_PaidRecvLevel: ");
      sb.Append(I_PaidRecvLevel);
      sb.Append(",S_ProductId: ");
      sb.Append(S_ProductId);
      sb.Append(",I_SeasonStart: ");
      sb.Append(I_SeasonStart);
      sb.Append(",I_SeasonEnd: ");
      sb.Append(I_SeasonEnd);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
