/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace sg.protocol.msg_web_api
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class MsgReqPurchaseShopProduct : TBase
  {
    private long _uid;
    private int _i_BuySeq;
    private int _i_Store;
    private string _s_PackageName;
    private string _s_ProductId;
    private string _s_Token;

    public long Uid
    {
      get
      {
        return _uid;
      }
      set
      {
        __isset.uid = true;
        this._uid = value;
      }
    }

    public int I_BuySeq
    {
      get
      {
        return _i_BuySeq;
      }
      set
      {
        __isset.i_BuySeq = true;
        this._i_BuySeq = value;
      }
    }

    public int I_Store
    {
      get
      {
        return _i_Store;
      }
      set
      {
        __isset.i_Store = true;
        this._i_Store = value;
      }
    }

    public string S_PackageName
    {
      get
      {
        return _s_PackageName;
      }
      set
      {
        __isset.s_PackageName = true;
        this._s_PackageName = value;
      }
    }

    public string S_ProductId
    {
      get
      {
        return _s_ProductId;
      }
      set
      {
        __isset.s_ProductId = true;
        this._s_ProductId = value;
      }
    }

    public string S_Token
    {
      get
      {
        return _s_Token;
      }
      set
      {
        __isset.s_Token = true;
        this._s_Token = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool uid;
      public bool i_BuySeq;
      public bool i_Store;
      public bool s_PackageName;
      public bool s_ProductId;
      public bool s_Token;
    }

    public MsgReqPurchaseShopProduct() {
      this._i_BuySeq = 0;
      this.__isset.i_BuySeq = true;
      this._i_Store = 0;
      this.__isset.i_Store = true;
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I64) {
              Uid = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              I_BuySeq = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              I_Store = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              S_PackageName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              S_ProductId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              S_Token = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("MsgReqPurchaseShopProduct");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.uid) {
        field.Name = "uid";
        field.Type = TType.I64;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Uid);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_BuySeq) {
        field.Name = "i_BuySeq";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_BuySeq);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_Store) {
        field.Name = "i_Store";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_Store);
        oprot.WriteFieldEnd();
      }
      if (S_PackageName != null && __isset.s_PackageName) {
        field.Name = "s_PackageName";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_PackageName);
        oprot.WriteFieldEnd();
      }
      if (S_ProductId != null && __isset.s_ProductId) {
        field.Name = "s_ProductId";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_ProductId);
        oprot.WriteFieldEnd();
      }
      if (S_Token != null && __isset.s_Token) {
        field.Name = "s_Token";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_Token);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("MsgReqPurchaseShopProduct(");
      sb.Append("Uid: ");
      sb.Append(Uid);
      sb.Append(",I_BuySeq: ");
      sb.Append(I_BuySeq);
      sb.Append(",I_Store: ");
      sb.Append(I_Store);
      sb.Append(",S_PackageName: ");
      sb.Append(S_PackageName);
      sb.Append(",S_ProductId: ");
      sb.Append(S_ProductId);
      sb.Append(",S_Token: ");
      sb.Append(S_Token);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
