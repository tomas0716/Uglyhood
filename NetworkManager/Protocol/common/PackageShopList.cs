/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace sg.protocol.common
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class PackageShopList : TBase
  {
    private int _i_PackageProductId;
    private int _i_PurchaseStep;
    private int _i_PurchaseLimit;
    private int _i_ProductId;
    private string _s_PurchStepImage;
    private string _s_ProductCode;
    private string _s_MoneyKind;
    private double _d_Price;
    private int _i_PackageId;
    private int _i_NowStep;
    private int _i_PurchaseLimitMax;
    private long _i_PackageLimitTime;
    private int _i_CoolTime;
    private string _s_ProductName;
    private string _s_ProductDescription;
    private bool _b_ViewType;
    private List<Package> _l_Package;
    private int _i_ImageState;
    private int _i_Mileage;

    public int I_PackageProductId
    {
      get
      {
        return _i_PackageProductId;
      }
      set
      {
        __isset.i_PackageProductId = true;
        this._i_PackageProductId = value;
      }
    }

    public int I_PurchaseStep
    {
      get
      {
        return _i_PurchaseStep;
      }
      set
      {
        __isset.i_PurchaseStep = true;
        this._i_PurchaseStep = value;
      }
    }

    public int I_PurchaseLimit
    {
      get
      {
        return _i_PurchaseLimit;
      }
      set
      {
        __isset.i_PurchaseLimit = true;
        this._i_PurchaseLimit = value;
      }
    }

    public int I_ProductId
    {
      get
      {
        return _i_ProductId;
      }
      set
      {
        __isset.i_ProductId = true;
        this._i_ProductId = value;
      }
    }

    public string S_PurchStepImage
    {
      get
      {
        return _s_PurchStepImage;
      }
      set
      {
        __isset.s_PurchStepImage = true;
        this._s_PurchStepImage = value;
      }
    }

    public string S_ProductCode
    {
      get
      {
        return _s_ProductCode;
      }
      set
      {
        __isset.s_ProductCode = true;
        this._s_ProductCode = value;
      }
    }

    public string S_MoneyKind
    {
      get
      {
        return _s_MoneyKind;
      }
      set
      {
        __isset.s_MoneyKind = true;
        this._s_MoneyKind = value;
      }
    }

    public double D_Price
    {
      get
      {
        return _d_Price;
      }
      set
      {
        __isset.d_Price = true;
        this._d_Price = value;
      }
    }

    public int I_PackageId
    {
      get
      {
        return _i_PackageId;
      }
      set
      {
        __isset.i_PackageId = true;
        this._i_PackageId = value;
      }
    }

    public int I_NowStep
    {
      get
      {
        return _i_NowStep;
      }
      set
      {
        __isset.i_NowStep = true;
        this._i_NowStep = value;
      }
    }

    public int I_PurchaseLimitMax
    {
      get
      {
        return _i_PurchaseLimitMax;
      }
      set
      {
        __isset.i_PurchaseLimitMax = true;
        this._i_PurchaseLimitMax = value;
      }
    }

    public long I_PackageLimitTime
    {
      get
      {
        return _i_PackageLimitTime;
      }
      set
      {
        __isset.i_PackageLimitTime = true;
        this._i_PackageLimitTime = value;
      }
    }

    public int I_CoolTime
    {
      get
      {
        return _i_CoolTime;
      }
      set
      {
        __isset.i_CoolTime = true;
        this._i_CoolTime = value;
      }
    }

    public string S_ProductName
    {
      get
      {
        return _s_ProductName;
      }
      set
      {
        __isset.s_ProductName = true;
        this._s_ProductName = value;
      }
    }

    public string S_ProductDescription
    {
      get
      {
        return _s_ProductDescription;
      }
      set
      {
        __isset.s_ProductDescription = true;
        this._s_ProductDescription = value;
      }
    }

    public bool B_ViewType
    {
      get
      {
        return _b_ViewType;
      }
      set
      {
        __isset.b_ViewType = true;
        this._b_ViewType = value;
      }
    }

    public List<Package> L_Package
    {
      get
      {
        return _l_Package;
      }
      set
      {
        __isset.l_Package = true;
        this._l_Package = value;
      }
    }

    public int I_ImageState
    {
      get
      {
        return _i_ImageState;
      }
      set
      {
        __isset.i_ImageState = true;
        this._i_ImageState = value;
      }
    }

    public int I_Mileage
    {
      get
      {
        return _i_Mileage;
      }
      set
      {
        __isset.i_Mileage = true;
        this._i_Mileage = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool i_PackageProductId;
      public bool i_PurchaseStep;
      public bool i_PurchaseLimit;
      public bool i_ProductId;
      public bool s_PurchStepImage;
      public bool s_ProductCode;
      public bool s_MoneyKind;
      public bool d_Price;
      public bool i_PackageId;
      public bool i_NowStep;
      public bool i_PurchaseLimitMax;
      public bool i_PackageLimitTime;
      public bool i_CoolTime;
      public bool s_ProductName;
      public bool s_ProductDescription;
      public bool b_ViewType;
      public bool l_Package;
      public bool i_ImageState;
      public bool i_Mileage;
    }

    public PackageShopList() {
      this._i_PackageProductId = 0;
      this.__isset.i_PackageProductId = true;
      this._i_PurchaseStep = 0;
      this.__isset.i_PurchaseStep = true;
      this._i_PurchaseLimit = 0;
      this.__isset.i_PurchaseLimit = true;
      this._i_ProductId = 0;
      this.__isset.i_ProductId = true;
      this._s_PurchStepImage = "";
      this.__isset.s_PurchStepImage = true;
      this._i_PackageId = 0;
      this.__isset.i_PackageId = true;
      this._i_NowStep = 0;
      this.__isset.i_NowStep = true;
      this._i_PurchaseLimitMax = 0;
      this.__isset.i_PurchaseLimitMax = true;
      this._i_PackageLimitTime = 0;
      this.__isset.i_PackageLimitTime = true;
      this._i_CoolTime = 0;
      this.__isset.i_CoolTime = true;
      this._s_ProductName = "";
      this.__isset.s_ProductName = true;
      this._s_ProductDescription = "";
      this.__isset.s_ProductDescription = true;
      this._b_ViewType = false;
      this.__isset.b_ViewType = true;
      this._i_ImageState = 0;
      this.__isset.i_ImageState = true;
      this._i_Mileage = 0;
      this.__isset.i_Mileage = true;
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              I_PackageProductId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              I_PurchaseStep = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              I_PurchaseLimit = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              I_ProductId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              S_PurchStepImage = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              S_ProductCode = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.String) {
              S_MoneyKind = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.Double) {
              D_Price = iprot.ReadDouble();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              I_PackageId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              I_NowStep = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.I32) {
              I_PurchaseLimitMax = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.I64) {
              I_PackageLimitTime = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.I32) {
              I_CoolTime = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.String) {
              S_ProductName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.String) {
              S_ProductDescription = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 16:
            if (field.Type == TType.Bool) {
              B_ViewType = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 17:
            if (field.Type == TType.List) {
              {
                L_Package = new List<Package>();
                TList _list4 = iprot.ReadListBegin();
                for( int _i5 = 0; _i5 < _list4.Count; ++_i5)
                {
                  Package _elem6 = new Package();
                  _elem6 = new Package();
                  _elem6.Read(iprot);
                  L_Package.Add(_elem6);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 18:
            if (field.Type == TType.I32) {
              I_ImageState = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 19:
            if (field.Type == TType.I32) {
              I_Mileage = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("PackageShopList");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.i_PackageProductId) {
        field.Name = "i_PackageProductId";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PackageProductId);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PurchaseStep) {
        field.Name = "i_PurchaseStep";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PurchaseStep);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PurchaseLimit) {
        field.Name = "i_PurchaseLimit";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PurchaseLimit);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_ProductId) {
        field.Name = "i_ProductId";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_ProductId);
        oprot.WriteFieldEnd();
      }
      if (S_PurchStepImage != null && __isset.s_PurchStepImage) {
        field.Name = "s_PurchStepImage";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_PurchStepImage);
        oprot.WriteFieldEnd();
      }
      if (S_ProductCode != null && __isset.s_ProductCode) {
        field.Name = "s_ProductCode";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_ProductCode);
        oprot.WriteFieldEnd();
      }
      if (S_MoneyKind != null && __isset.s_MoneyKind) {
        field.Name = "s_MoneyKind";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_MoneyKind);
        oprot.WriteFieldEnd();
      }
      if (__isset.d_Price) {
        field.Name = "d_Price";
        field.Type = TType.Double;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteDouble(D_Price);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PackageId) {
        field.Name = "i_PackageId";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PackageId);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_NowStep) {
        field.Name = "i_NowStep";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_NowStep);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PurchaseLimitMax) {
        field.Name = "i_PurchaseLimitMax";
        field.Type = TType.I32;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PurchaseLimitMax);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PackageLimitTime) {
        field.Name = "i_PackageLimitTime";
        field.Type = TType.I64;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(I_PackageLimitTime);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_CoolTime) {
        field.Name = "i_CoolTime";
        field.Type = TType.I32;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_CoolTime);
        oprot.WriteFieldEnd();
      }
      if (S_ProductName != null && __isset.s_ProductName) {
        field.Name = "s_ProductName";
        field.Type = TType.String;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_ProductName);
        oprot.WriteFieldEnd();
      }
      if (S_ProductDescription != null && __isset.s_ProductDescription) {
        field.Name = "s_ProductDescription";
        field.Type = TType.String;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_ProductDescription);
        oprot.WriteFieldEnd();
      }
      if (__isset.b_ViewType) {
        field.Name = "b_ViewType";
        field.Type = TType.Bool;
        field.ID = 16;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(B_ViewType);
        oprot.WriteFieldEnd();
      }
      if (L_Package != null && __isset.l_Package) {
        field.Name = "l_Package";
        field.Type = TType.List;
        field.ID = 17;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, L_Package.Count));
          foreach (Package _iter7 in L_Package)
          {
            _iter7.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      if (__isset.i_ImageState) {
        field.Name = "i_ImageState";
        field.Type = TType.I32;
        field.ID = 18;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_ImageState);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_Mileage) {
        field.Name = "i_Mileage";
        field.Type = TType.I32;
        field.ID = 19;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_Mileage);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("PackageShopList(");
      sb.Append("I_PackageProductId: ");
      sb.Append(I_PackageProductId);
      sb.Append(",I_PurchaseStep: ");
      sb.Append(I_PurchaseStep);
      sb.Append(",I_PurchaseLimit: ");
      sb.Append(I_PurchaseLimit);
      sb.Append(",I_ProductId: ");
      sb.Append(I_ProductId);
      sb.Append(",S_PurchStepImage: ");
      sb.Append(S_PurchStepImage);
      sb.Append(",S_ProductCode: ");
      sb.Append(S_ProductCode);
      sb.Append(",S_MoneyKind: ");
      sb.Append(S_MoneyKind);
      sb.Append(",D_Price: ");
      sb.Append(D_Price);
      sb.Append(",I_PackageId: ");
      sb.Append(I_PackageId);
      sb.Append(",I_NowStep: ");
      sb.Append(I_NowStep);
      sb.Append(",I_PurchaseLimitMax: ");
      sb.Append(I_PurchaseLimitMax);
      sb.Append(",I_PackageLimitTime: ");
      sb.Append(I_PackageLimitTime);
      sb.Append(",I_CoolTime: ");
      sb.Append(I_CoolTime);
      sb.Append(",S_ProductName: ");
      sb.Append(S_ProductName);
      sb.Append(",S_ProductDescription: ");
      sb.Append(S_ProductDescription);
      sb.Append(",B_ViewType: ");
      sb.Append(B_ViewType);
      sb.Append(",L_Package: ");
      sb.Append(L_Package);
      sb.Append(",I_ImageState: ");
      sb.Append(I_ImageState);
      sb.Append(",I_Mileage: ");
      sb.Append(I_Mileage);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
