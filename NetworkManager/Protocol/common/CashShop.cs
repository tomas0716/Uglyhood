/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace sg.protocol.common
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class CashShop : TBase
  {
    private int _i_ProductId;
    private string _s_Market;
    private string _s_ProductName;
    private string _s_ProductDescription_id;
    private string _s_MoneyKind;
    private double _d_Price;
    private bool _b_IsPackage;
    private int _i_GoodsId;
    private int _i_Quantity;
    private int _i_RestrictionCount;
    private string _s_ImageName;
    private int _i_MemberCardPeriod;
    private int _i_BonusQuantity;
    private bool _b_IsShow;
    private int _i_Priority;
    private string _s_ProductCode;

    public int I_ProductId
    {
      get
      {
        return _i_ProductId;
      }
      set
      {
        __isset.i_ProductId = true;
        this._i_ProductId = value;
      }
    }

    public string S_Market
    {
      get
      {
        return _s_Market;
      }
      set
      {
        __isset.s_Market = true;
        this._s_Market = value;
      }
    }

    public string S_ProductName
    {
      get
      {
        return _s_ProductName;
      }
      set
      {
        __isset.s_ProductName = true;
        this._s_ProductName = value;
      }
    }

    public string S_ProductDescription_id
    {
      get
      {
        return _s_ProductDescription_id;
      }
      set
      {
        __isset.s_ProductDescription_id = true;
        this._s_ProductDescription_id = value;
      }
    }

    public string S_MoneyKind
    {
      get
      {
        return _s_MoneyKind;
      }
      set
      {
        __isset.s_MoneyKind = true;
        this._s_MoneyKind = value;
      }
    }

    public double D_Price
    {
      get
      {
        return _d_Price;
      }
      set
      {
        __isset.d_Price = true;
        this._d_Price = value;
      }
    }

    public bool B_IsPackage
    {
      get
      {
        return _b_IsPackage;
      }
      set
      {
        __isset.b_IsPackage = true;
        this._b_IsPackage = value;
      }
    }

    public int I_GoodsId
    {
      get
      {
        return _i_GoodsId;
      }
      set
      {
        __isset.i_GoodsId = true;
        this._i_GoodsId = value;
      }
    }

    public int I_Quantity
    {
      get
      {
        return _i_Quantity;
      }
      set
      {
        __isset.i_Quantity = true;
        this._i_Quantity = value;
      }
    }

    public int I_RestrictionCount
    {
      get
      {
        return _i_RestrictionCount;
      }
      set
      {
        __isset.i_RestrictionCount = true;
        this._i_RestrictionCount = value;
      }
    }

    public string S_ImageName
    {
      get
      {
        return _s_ImageName;
      }
      set
      {
        __isset.s_ImageName = true;
        this._s_ImageName = value;
      }
    }

    public int I_MemberCardPeriod
    {
      get
      {
        return _i_MemberCardPeriod;
      }
      set
      {
        __isset.i_MemberCardPeriod = true;
        this._i_MemberCardPeriod = value;
      }
    }

    public int I_BonusQuantity
    {
      get
      {
        return _i_BonusQuantity;
      }
      set
      {
        __isset.i_BonusQuantity = true;
        this._i_BonusQuantity = value;
      }
    }

    public bool B_IsShow
    {
      get
      {
        return _b_IsShow;
      }
      set
      {
        __isset.b_IsShow = true;
        this._b_IsShow = value;
      }
    }

    public int I_Priority
    {
      get
      {
        return _i_Priority;
      }
      set
      {
        __isset.i_Priority = true;
        this._i_Priority = value;
      }
    }

    public string S_ProductCode
    {
      get
      {
        return _s_ProductCode;
      }
      set
      {
        __isset.s_ProductCode = true;
        this._s_ProductCode = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool i_ProductId;
      public bool s_Market;
      public bool s_ProductName;
      public bool s_ProductDescription_id;
      public bool s_MoneyKind;
      public bool d_Price;
      public bool b_IsPackage;
      public bool i_GoodsId;
      public bool i_Quantity;
      public bool i_RestrictionCount;
      public bool s_ImageName;
      public bool i_MemberCardPeriod;
      public bool i_BonusQuantity;
      public bool b_IsShow;
      public bool i_Priority;
      public bool s_ProductCode;
    }

    public CashShop() {
      this._i_ProductId = 0;
      this.__isset.i_ProductId = true;
      this._s_Market = "";
      this.__isset.s_Market = true;
      this._s_ProductName = "";
      this.__isset.s_ProductName = true;
      this._s_ProductDescription_id = "";
      this.__isset.s_ProductDescription_id = true;
      this._d_Price = 0;
      this.__isset.d_Price = true;
      this._i_GoodsId = 0;
      this.__isset.i_GoodsId = true;
      this._i_Quantity = 0;
      this.__isset.i_Quantity = true;
      this._i_RestrictionCount = 0;
      this.__isset.i_RestrictionCount = true;
      this._i_MemberCardPeriod = 0;
      this.__isset.i_MemberCardPeriod = true;
      this._i_BonusQuantity = 0;
      this.__isset.i_BonusQuantity = true;
      this._i_Priority = 0;
      this.__isset.i_Priority = true;
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              I_ProductId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              S_Market = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              S_ProductName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              S_ProductDescription_id = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.String) {
              S_MoneyKind = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.Double) {
              D_Price = iprot.ReadDouble();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.Bool) {
              B_IsPackage = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              I_GoodsId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              I_Quantity = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              I_RestrictionCount = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              S_ImageName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.I32) {
              I_MemberCardPeriod = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.I32) {
              I_BonusQuantity = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.Bool) {
              B_IsShow = iprot.ReadBool();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 15:
            if (field.Type == TType.I32) {
              I_Priority = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 16:
            if (field.Type == TType.String) {
              S_ProductCode = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("CashShop");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.i_ProductId) {
        field.Name = "i_ProductId";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_ProductId);
        oprot.WriteFieldEnd();
      }
      if (S_Market != null && __isset.s_Market) {
        field.Name = "s_Market";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_Market);
        oprot.WriteFieldEnd();
      }
      if (S_ProductName != null && __isset.s_ProductName) {
        field.Name = "s_ProductName";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_ProductName);
        oprot.WriteFieldEnd();
      }
      if (S_ProductDescription_id != null && __isset.s_ProductDescription_id) {
        field.Name = "s_ProductDescription_id";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_ProductDescription_id);
        oprot.WriteFieldEnd();
      }
      if (S_MoneyKind != null && __isset.s_MoneyKind) {
        field.Name = "s_MoneyKind";
        field.Type = TType.String;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_MoneyKind);
        oprot.WriteFieldEnd();
      }
      if (__isset.d_Price) {
        field.Name = "d_Price";
        field.Type = TType.Double;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteDouble(D_Price);
        oprot.WriteFieldEnd();
      }
      if (__isset.b_IsPackage) {
        field.Name = "b_IsPackage";
        field.Type = TType.Bool;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(B_IsPackage);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_GoodsId) {
        field.Name = "i_GoodsId";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_GoodsId);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_Quantity) {
        field.Name = "i_Quantity";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_Quantity);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_RestrictionCount) {
        field.Name = "i_RestrictionCount";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_RestrictionCount);
        oprot.WriteFieldEnd();
      }
      if (S_ImageName != null && __isset.s_ImageName) {
        field.Name = "s_ImageName";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_ImageName);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_MemberCardPeriod) {
        field.Name = "i_MemberCardPeriod";
        field.Type = TType.I32;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_MemberCardPeriod);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_BonusQuantity) {
        field.Name = "i_BonusQuantity";
        field.Type = TType.I32;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_BonusQuantity);
        oprot.WriteFieldEnd();
      }
      if (__isset.b_IsShow) {
        field.Name = "b_IsShow";
        field.Type = TType.Bool;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteBool(B_IsShow);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_Priority) {
        field.Name = "i_Priority";
        field.Type = TType.I32;
        field.ID = 15;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_Priority);
        oprot.WriteFieldEnd();
      }
      if (S_ProductCode != null && __isset.s_ProductCode) {
        field.Name = "s_ProductCode";
        field.Type = TType.String;
        field.ID = 16;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_ProductCode);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("CashShop(");
      sb.Append("I_ProductId: ");
      sb.Append(I_ProductId);
      sb.Append(",S_Market: ");
      sb.Append(S_Market);
      sb.Append(",S_ProductName: ");
      sb.Append(S_ProductName);
      sb.Append(",S_ProductDescription_id: ");
      sb.Append(S_ProductDescription_id);
      sb.Append(",S_MoneyKind: ");
      sb.Append(S_MoneyKind);
      sb.Append(",D_Price: ");
      sb.Append(D_Price);
      sb.Append(",B_IsPackage: ");
      sb.Append(B_IsPackage);
      sb.Append(",I_GoodsId: ");
      sb.Append(I_GoodsId);
      sb.Append(",I_Quantity: ");
      sb.Append(I_Quantity);
      sb.Append(",I_RestrictionCount: ");
      sb.Append(I_RestrictionCount);
      sb.Append(",S_ImageName: ");
      sb.Append(S_ImageName);
      sb.Append(",I_MemberCardPeriod: ");
      sb.Append(I_MemberCardPeriod);
      sb.Append(",I_BonusQuantity: ");
      sb.Append(I_BonusQuantity);
      sb.Append(",B_IsShow: ");
      sb.Append(B_IsShow);
      sb.Append(",I_Priority: ");
      sb.Append(I_Priority);
      sb.Append(",S_ProductCode: ");
      sb.Append(S_ProductCode);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
