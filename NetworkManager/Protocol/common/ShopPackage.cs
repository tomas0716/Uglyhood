/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace sg.protocol.common
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class ShopPackage : TBase
  {
    private int _i_PackageKind;
    private int _i_Id;
    private int _i_PaymentType;
    private string _s_PaymentId;
    private int _i_PaymentQty;
    private int _i_PurchaseLimit;
    private int _i_RequiredChapter;
    private int _i_CycleType;
    private int _i_RankStart;
    private int _i_RankEnd;
    private int _i_RequiredUnit;
    private int _i_ExpiretimeHour;

    public int I_PackageKind
    {
      get
      {
        return _i_PackageKind;
      }
      set
      {
        __isset.i_PackageKind = true;
        this._i_PackageKind = value;
      }
    }

    public int I_Id
    {
      get
      {
        return _i_Id;
      }
      set
      {
        __isset.i_Id = true;
        this._i_Id = value;
      }
    }

    public int I_PaymentType
    {
      get
      {
        return _i_PaymentType;
      }
      set
      {
        __isset.i_PaymentType = true;
        this._i_PaymentType = value;
      }
    }

    public string S_PaymentId
    {
      get
      {
        return _s_PaymentId;
      }
      set
      {
        __isset.s_PaymentId = true;
        this._s_PaymentId = value;
      }
    }

    public int I_PaymentQty
    {
      get
      {
        return _i_PaymentQty;
      }
      set
      {
        __isset.i_PaymentQty = true;
        this._i_PaymentQty = value;
      }
    }

    public int I_PurchaseLimit
    {
      get
      {
        return _i_PurchaseLimit;
      }
      set
      {
        __isset.i_PurchaseLimit = true;
        this._i_PurchaseLimit = value;
      }
    }

    public int I_RequiredChapter
    {
      get
      {
        return _i_RequiredChapter;
      }
      set
      {
        __isset.i_RequiredChapter = true;
        this._i_RequiredChapter = value;
      }
    }

    public int I_CycleType
    {
      get
      {
        return _i_CycleType;
      }
      set
      {
        __isset.i_CycleType = true;
        this._i_CycleType = value;
      }
    }

    public int I_RankStart
    {
      get
      {
        return _i_RankStart;
      }
      set
      {
        __isset.i_RankStart = true;
        this._i_RankStart = value;
      }
    }

    public int I_RankEnd
    {
      get
      {
        return _i_RankEnd;
      }
      set
      {
        __isset.i_RankEnd = true;
        this._i_RankEnd = value;
      }
    }

    public int I_RequiredUnit
    {
      get
      {
        return _i_RequiredUnit;
      }
      set
      {
        __isset.i_RequiredUnit = true;
        this._i_RequiredUnit = value;
      }
    }

    public int I_ExpiretimeHour
    {
      get
      {
        return _i_ExpiretimeHour;
      }
      set
      {
        __isset.i_ExpiretimeHour = true;
        this._i_ExpiretimeHour = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool i_PackageKind;
      public bool i_Id;
      public bool i_PaymentType;
      public bool s_PaymentId;
      public bool i_PaymentQty;
      public bool i_PurchaseLimit;
      public bool i_RequiredChapter;
      public bool i_CycleType;
      public bool i_RankStart;
      public bool i_RankEnd;
      public bool i_RequiredUnit;
      public bool i_ExpiretimeHour;
    }

    public ShopPackage() {
      this._i_PackageKind = 0;
      this.__isset.i_PackageKind = true;
      this._i_Id = 0;
      this.__isset.i_Id = true;
      this._i_PaymentType = 0;
      this.__isset.i_PaymentType = true;
      this._s_PaymentId = "";
      this.__isset.s_PaymentId = true;
      this._i_PaymentQty = 0;
      this.__isset.i_PaymentQty = true;
      this._i_PurchaseLimit = 0;
      this.__isset.i_PurchaseLimit = true;
      this._i_RequiredChapter = 0;
      this.__isset.i_RequiredChapter = true;
      this._i_CycleType = 0;
      this.__isset.i_CycleType = true;
      this._i_RankStart = 0;
      this.__isset.i_RankStart = true;
      this._i_RankEnd = 0;
      this.__isset.i_RankEnd = true;
      this._i_RequiredUnit = 0;
      this.__isset.i_RequiredUnit = true;
      this._i_ExpiretimeHour = 0;
      this.__isset.i_ExpiretimeHour = true;
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              I_PackageKind = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              I_Id = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              I_PaymentType = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              S_PaymentId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              I_PaymentQty = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              I_PurchaseLimit = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              I_RequiredChapter = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              I_CycleType = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              I_RankStart = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              I_RankEnd = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.I32) {
              I_RequiredUnit = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.I32) {
              I_ExpiretimeHour = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ShopPackage");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.i_PackageKind) {
        field.Name = "i_PackageKind";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PackageKind);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_Id) {
        field.Name = "i_Id";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_Id);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PaymentType) {
        field.Name = "i_PaymentType";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PaymentType);
        oprot.WriteFieldEnd();
      }
      if (S_PaymentId != null && __isset.s_PaymentId) {
        field.Name = "s_PaymentId";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_PaymentId);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PaymentQty) {
        field.Name = "i_PaymentQty";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PaymentQty);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PurchaseLimit) {
        field.Name = "i_PurchaseLimit";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PurchaseLimit);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_RequiredChapter) {
        field.Name = "i_RequiredChapter";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_RequiredChapter);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_CycleType) {
        field.Name = "i_CycleType";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_CycleType);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_RankStart) {
        field.Name = "i_RankStart";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_RankStart);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_RankEnd) {
        field.Name = "i_RankEnd";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_RankEnd);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_RequiredUnit) {
        field.Name = "i_RequiredUnit";
        field.Type = TType.I32;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_RequiredUnit);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_ExpiretimeHour) {
        field.Name = "i_ExpiretimeHour";
        field.Type = TType.I32;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_ExpiretimeHour);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("ShopPackage(");
      sb.Append("I_PackageKind: ");
      sb.Append(I_PackageKind);
      sb.Append(",I_Id: ");
      sb.Append(I_Id);
      sb.Append(",I_PaymentType: ");
      sb.Append(I_PaymentType);
      sb.Append(",S_PaymentId: ");
      sb.Append(S_PaymentId);
      sb.Append(",I_PaymentQty: ");
      sb.Append(I_PaymentQty);
      sb.Append(",I_PurchaseLimit: ");
      sb.Append(I_PurchaseLimit);
      sb.Append(",I_RequiredChapter: ");
      sb.Append(I_RequiredChapter);
      sb.Append(",I_CycleType: ");
      sb.Append(I_CycleType);
      sb.Append(",I_RankStart: ");
      sb.Append(I_RankStart);
      sb.Append(",I_RankEnd: ");
      sb.Append(I_RankEnd);
      sb.Append(",I_RequiredUnit: ");
      sb.Append(I_RequiredUnit);
      sb.Append(",I_ExpiretimeHour: ");
      sb.Append(I_ExpiretimeHour);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
