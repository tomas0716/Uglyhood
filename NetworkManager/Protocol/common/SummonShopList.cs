/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace sg.protocol.common
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class SummonShopList : TBase
  {
    private int _i_GroupId;
    private int _i_ProductId;
    private int _i_PriceId;
    private int _i_PaymentType;
    private int _i_PaymentId;
    private int _i_PaymentCount;
    private int _i_IsBadge;
    private int _i_RotationType;
    private int _i_StartDay;
    private int _i_EndDay;
    private int _i_StartTime;
    private int _i_EndTime;

    public int I_GroupId
    {
      get
      {
        return _i_GroupId;
      }
      set
      {
        __isset.i_GroupId = true;
        this._i_GroupId = value;
      }
    }

    public int I_ProductId
    {
      get
      {
        return _i_ProductId;
      }
      set
      {
        __isset.i_ProductId = true;
        this._i_ProductId = value;
      }
    }

    public int I_PriceId
    {
      get
      {
        return _i_PriceId;
      }
      set
      {
        __isset.i_PriceId = true;
        this._i_PriceId = value;
      }
    }

    public int I_PaymentType
    {
      get
      {
        return _i_PaymentType;
      }
      set
      {
        __isset.i_PaymentType = true;
        this._i_PaymentType = value;
      }
    }

    public int I_PaymentId
    {
      get
      {
        return _i_PaymentId;
      }
      set
      {
        __isset.i_PaymentId = true;
        this._i_PaymentId = value;
      }
    }

    public int I_PaymentCount
    {
      get
      {
        return _i_PaymentCount;
      }
      set
      {
        __isset.i_PaymentCount = true;
        this._i_PaymentCount = value;
      }
    }

    public int I_IsBadge
    {
      get
      {
        return _i_IsBadge;
      }
      set
      {
        __isset.i_IsBadge = true;
        this._i_IsBadge = value;
      }
    }

    public int I_RotationType
    {
      get
      {
        return _i_RotationType;
      }
      set
      {
        __isset.i_RotationType = true;
        this._i_RotationType = value;
      }
    }

    public int I_StartDay
    {
      get
      {
        return _i_StartDay;
      }
      set
      {
        __isset.i_StartDay = true;
        this._i_StartDay = value;
      }
    }

    public int I_EndDay
    {
      get
      {
        return _i_EndDay;
      }
      set
      {
        __isset.i_EndDay = true;
        this._i_EndDay = value;
      }
    }

    public int I_StartTime
    {
      get
      {
        return _i_StartTime;
      }
      set
      {
        __isset.i_StartTime = true;
        this._i_StartTime = value;
      }
    }

    public int I_EndTime
    {
      get
      {
        return _i_EndTime;
      }
      set
      {
        __isset.i_EndTime = true;
        this._i_EndTime = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool i_GroupId;
      public bool i_ProductId;
      public bool i_PriceId;
      public bool i_PaymentType;
      public bool i_PaymentId;
      public bool i_PaymentCount;
      public bool i_IsBadge;
      public bool i_RotationType;
      public bool i_StartDay;
      public bool i_EndDay;
      public bool i_StartTime;
      public bool i_EndTime;
    }

    public SummonShopList() {
      this._i_GroupId = 0;
      this.__isset.i_GroupId = true;
      this._i_ProductId = 0;
      this.__isset.i_ProductId = true;
      this._i_PriceId = 0;
      this.__isset.i_PriceId = true;
      this._i_PaymentType = 0;
      this.__isset.i_PaymentType = true;
      this._i_PaymentId = 0;
      this.__isset.i_PaymentId = true;
      this._i_PaymentCount = 0;
      this.__isset.i_PaymentCount = true;
      this._i_IsBadge = 0;
      this.__isset.i_IsBadge = true;
      this._i_RotationType = 0;
      this.__isset.i_RotationType = true;
      this._i_StartDay = 0;
      this.__isset.i_StartDay = true;
      this._i_EndDay = 0;
      this.__isset.i_EndDay = true;
      this._i_StartTime = 0;
      this.__isset.i_StartTime = true;
      this._i_EndTime = 0;
      this.__isset.i_EndTime = true;
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              I_GroupId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              I_ProductId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              I_PriceId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              I_PaymentType = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              I_PaymentId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              I_PaymentCount = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I32) {
              I_IsBadge = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.I32) {
              I_RotationType = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              I_StartDay = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              I_EndDay = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.I32) {
              I_StartTime = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.I32) {
              I_EndTime = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("SummonShopList");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.i_GroupId) {
        field.Name = "i_GroupId";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_GroupId);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_ProductId) {
        field.Name = "i_ProductId";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_ProductId);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PriceId) {
        field.Name = "i_PriceId";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PriceId);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PaymentType) {
        field.Name = "i_PaymentType";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PaymentType);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PaymentId) {
        field.Name = "i_PaymentId";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PaymentId);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_PaymentCount) {
        field.Name = "i_PaymentCount";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_PaymentCount);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_IsBadge) {
        field.Name = "i_IsBadge";
        field.Type = TType.I32;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_IsBadge);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_RotationType) {
        field.Name = "i_RotationType";
        field.Type = TType.I32;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_RotationType);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_StartDay) {
        field.Name = "i_StartDay";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_StartDay);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_EndDay) {
        field.Name = "i_EndDay";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_EndDay);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_StartTime) {
        field.Name = "i_StartTime";
        field.Type = TType.I32;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_StartTime);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_EndTime) {
        field.Name = "i_EndTime";
        field.Type = TType.I32;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_EndTime);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("SummonShopList(");
      sb.Append("I_GroupId: ");
      sb.Append(I_GroupId);
      sb.Append(",I_ProductId: ");
      sb.Append(I_ProductId);
      sb.Append(",I_PriceId: ");
      sb.Append(I_PriceId);
      sb.Append(",I_PaymentType: ");
      sb.Append(I_PaymentType);
      sb.Append(",I_PaymentId: ");
      sb.Append(I_PaymentId);
      sb.Append(",I_PaymentCount: ");
      sb.Append(I_PaymentCount);
      sb.Append(",I_IsBadge: ");
      sb.Append(I_IsBadge);
      sb.Append(",I_RotationType: ");
      sb.Append(I_RotationType);
      sb.Append(",I_StartDay: ");
      sb.Append(I_StartDay);
      sb.Append(",I_EndDay: ");
      sb.Append(I_EndDay);
      sb.Append(",I_StartTime: ");
      sb.Append(I_StartTime);
      sb.Append(",I_EndTime: ");
      sb.Append(I_EndTime);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
