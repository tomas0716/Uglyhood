/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace sg.protocol.common
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class AttendanceNew : TBase
  {
    private int _i_AttendId;
    private int _i_AttendWeek;
    private int _i_RewardKind;
    private int _i_GoodsId;
    private int _i_GoodsCount;
    private int _i_MemberGive;
    private string _s_PopnpcImage;
    private string _s_PopnpcMent;
    private string _s_PopItemImage;
    private string _s_PopupMent;
    private string _s_GoodsName;
    private string _s_VipGoodsName;

    public int I_AttendId
    {
      get
      {
        return _i_AttendId;
      }
      set
      {
        __isset.i_AttendId = true;
        this._i_AttendId = value;
      }
    }

    public int I_AttendWeek
    {
      get
      {
        return _i_AttendWeek;
      }
      set
      {
        __isset.i_AttendWeek = true;
        this._i_AttendWeek = value;
      }
    }

    public int I_RewardKind
    {
      get
      {
        return _i_RewardKind;
      }
      set
      {
        __isset.i_RewardKind = true;
        this._i_RewardKind = value;
      }
    }

    public int I_GoodsId
    {
      get
      {
        return _i_GoodsId;
      }
      set
      {
        __isset.i_GoodsId = true;
        this._i_GoodsId = value;
      }
    }

    public int I_GoodsCount
    {
      get
      {
        return _i_GoodsCount;
      }
      set
      {
        __isset.i_GoodsCount = true;
        this._i_GoodsCount = value;
      }
    }

    public int I_MemberGive
    {
      get
      {
        return _i_MemberGive;
      }
      set
      {
        __isset.i_MemberGive = true;
        this._i_MemberGive = value;
      }
    }

    public string S_PopnpcImage
    {
      get
      {
        return _s_PopnpcImage;
      }
      set
      {
        __isset.s_PopnpcImage = true;
        this._s_PopnpcImage = value;
      }
    }

    public string S_PopnpcMent
    {
      get
      {
        return _s_PopnpcMent;
      }
      set
      {
        __isset.s_PopnpcMent = true;
        this._s_PopnpcMent = value;
      }
    }

    public string S_PopItemImage
    {
      get
      {
        return _s_PopItemImage;
      }
      set
      {
        __isset.s_PopItemImage = true;
        this._s_PopItemImage = value;
      }
    }

    public string S_PopupMent
    {
      get
      {
        return _s_PopupMent;
      }
      set
      {
        __isset.s_PopupMent = true;
        this._s_PopupMent = value;
      }
    }

    public string S_GoodsName
    {
      get
      {
        return _s_GoodsName;
      }
      set
      {
        __isset.s_GoodsName = true;
        this._s_GoodsName = value;
      }
    }

    public string S_VipGoodsName
    {
      get
      {
        return _s_VipGoodsName;
      }
      set
      {
        __isset.s_VipGoodsName = true;
        this._s_VipGoodsName = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool i_AttendId;
      public bool i_AttendWeek;
      public bool i_RewardKind;
      public bool i_GoodsId;
      public bool i_GoodsCount;
      public bool i_MemberGive;
      public bool s_PopnpcImage;
      public bool s_PopnpcMent;
      public bool s_PopItemImage;
      public bool s_PopupMent;
      public bool s_GoodsName;
      public bool s_VipGoodsName;
    }

    public AttendanceNew() {
      this._i_AttendId = 0;
      this.__isset.i_AttendId = true;
      this._i_AttendWeek = 0;
      this.__isset.i_AttendWeek = true;
      this._i_RewardKind = 0;
      this.__isset.i_RewardKind = true;
      this._i_GoodsId = 0;
      this.__isset.i_GoodsId = true;
      this._i_GoodsCount = 0;
      this.__isset.i_GoodsCount = true;
      this._i_MemberGive = 0;
      this.__isset.i_MemberGive = true;
      this._s_PopnpcImage = "";
      this.__isset.s_PopnpcImage = true;
      this._s_PopnpcMent = "";
      this.__isset.s_PopnpcMent = true;
      this._s_PopItemImage = "";
      this.__isset.s_PopItemImage = true;
      this._s_PopupMent = "";
      this.__isset.s_PopupMent = true;
      this._s_GoodsName = "";
      this.__isset.s_GoodsName = true;
      this._s_VipGoodsName = "";
      this.__isset.s_VipGoodsName = true;
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              I_AttendId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.I32) {
              I_AttendWeek = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.I32) {
              I_RewardKind = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              I_GoodsId = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              I_GoodsCount = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              I_MemberGive = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.String) {
              S_PopnpcImage = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              S_PopnpcMent = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.String) {
              S_PopItemImage = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.String) {
              S_PopupMent = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              S_GoodsName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.String) {
              S_VipGoodsName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("AttendanceNew");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.i_AttendId) {
        field.Name = "i_AttendId";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_AttendId);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_AttendWeek) {
        field.Name = "i_AttendWeek";
        field.Type = TType.I32;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_AttendWeek);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_RewardKind) {
        field.Name = "i_RewardKind";
        field.Type = TType.I32;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_RewardKind);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_GoodsId) {
        field.Name = "i_GoodsId";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_GoodsId);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_GoodsCount) {
        field.Name = "i_GoodsCount";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_GoodsCount);
        oprot.WriteFieldEnd();
      }
      if (__isset.i_MemberGive) {
        field.Name = "i_MemberGive";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(I_MemberGive);
        oprot.WriteFieldEnd();
      }
      if (S_PopnpcImage != null && __isset.s_PopnpcImage) {
        field.Name = "s_PopnpcImage";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_PopnpcImage);
        oprot.WriteFieldEnd();
      }
      if (S_PopnpcMent != null && __isset.s_PopnpcMent) {
        field.Name = "s_PopnpcMent";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_PopnpcMent);
        oprot.WriteFieldEnd();
      }
      if (S_PopItemImage != null && __isset.s_PopItemImage) {
        field.Name = "s_PopItemImage";
        field.Type = TType.String;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_PopItemImage);
        oprot.WriteFieldEnd();
      }
      if (S_PopupMent != null && __isset.s_PopupMent) {
        field.Name = "s_PopupMent";
        field.Type = TType.String;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_PopupMent);
        oprot.WriteFieldEnd();
      }
      if (S_GoodsName != null && __isset.s_GoodsName) {
        field.Name = "s_GoodsName";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_GoodsName);
        oprot.WriteFieldEnd();
      }
      if (S_VipGoodsName != null && __isset.s_VipGoodsName) {
        field.Name = "s_VipGoodsName";
        field.Type = TType.String;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(S_VipGoodsName);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("AttendanceNew(");
      sb.Append("I_AttendId: ");
      sb.Append(I_AttendId);
      sb.Append(",I_AttendWeek: ");
      sb.Append(I_AttendWeek);
      sb.Append(",I_RewardKind: ");
      sb.Append(I_RewardKind);
      sb.Append(",I_GoodsId: ");
      sb.Append(I_GoodsId);
      sb.Append(",I_GoodsCount: ");
      sb.Append(I_GoodsCount);
      sb.Append(",I_MemberGive: ");
      sb.Append(I_MemberGive);
      sb.Append(",S_PopnpcImage: ");
      sb.Append(S_PopnpcImage);
      sb.Append(",S_PopnpcMent: ");
      sb.Append(S_PopnpcMent);
      sb.Append(",S_PopItemImage: ");
      sb.Append(S_PopItemImage);
      sb.Append(",S_PopupMent: ");
      sb.Append(S_PopupMent);
      sb.Append(",S_GoodsName: ");
      sb.Append(S_GoodsName);
      sb.Append(",S_VipGoodsName: ");
      sb.Append(S_VipGoodsName);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
